using System.Collections.Generic;
using System.Globalization;
using System.Runtime.Serialization;
using BlazorTestWeb.Helpers;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BlazorTestWeb.Data;
//
//    var feed = Feed.FromJson(jsonString);

namespace BlazorTestWeb.Data
{

    public partial class Feed
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("field_feed_image", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldFeedImage { get; set; }

        [JsonProperty("field_feed_description", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldFeedDescription { get; set; }

        [JsonProperty("created", NullValueHandling = NullValueHandling.Ignore)]
        public string Created { get; set; }

        [JsonProperty("field_feed_type", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldFeedType { get; set; }

        [OnDeserialized]
        private void SetExtraData(StreamingContext context)
        {
            FieldFeedImage = $"{Constants.BaseUrl}{FieldFeedImage}";
        }
    }

    public partial class Feed
    {
        public static List<Feed> FromJson(string json) => JsonConvert.DeserializeObject<List<Feed>>(json, FeedConverter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this List<Feed> self) => JsonConvert.SerializeObject(self, FeedConverter.Settings);
    }

    internal static class FeedConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
