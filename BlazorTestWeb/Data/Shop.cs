using System.Collections.Generic;
using System.Globalization;
using System.Runtime.Serialization;
using BlazorTestWeb.Helpers;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BlazorTestWeb.Data;
//
//    var shop = Shop.FromJson(jsonString);

namespace BlazorTestWeb.Data
{
    public partial class Shop
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("field_administrative_area", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldAdministrativeArea { get; set; }

        [JsonProperty("field_shop_address_organization", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressOrganization { get; set; }

        [JsonProperty("field_shop_address_address_line1", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressAddressLine1 { get; set; }

        [JsonProperty("field_shop_address_address_line2", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressAddressLine2 { get; set; }

        [JsonProperty("field_shop_address_locality", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressLocality { get; set; }

        [JsonProperty("field_shop_address_administrative_area", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressAdministrativeArea { get; set; }

        [JsonProperty("field_shop_address_postal_code", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressPostalCode { get; set; }

        [JsonProperty("field_shop_address_country_code", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopAddressCountryCode { get; set; }

        [JsonProperty("field_shop_assets", NullValueHandling = NullValueHandling.Ignore)]
        public List<object> FieldShopAssets { get; set; }

        [JsonProperty("field_shop_description", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopDescription { get; set; }

        [JsonProperty("field_shop_link", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopLink { get; set; }

        [JsonProperty("field_shop_logo", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopLogo { get; set; }

        [JsonProperty("field_shop_coordinates", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopCoordinates { get; set; }

        [JsonProperty("field_shop_telephone", NullValueHandling = NullValueHandling.Ignore)]
        public bool? FieldShopTelephone { get; set; }

        [JsonProperty("field_shop_search_keywords", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopSearchKeywords { get; set; }

        [JsonProperty("field_shop_featured", NullValueHandling = NullValueHandling.Ignore)]
        public string FieldShopFeatured { get; set; }

        [JsonProperty("nid", NullValueHandling = NullValueHandling.Ignore)]
        public string Nid { get; set; }

        [OnDeserialized]
        private void SetExtraData(StreamingContext context)
        {
            FieldShopLogo = $"{Constants.BaseUrl}{FieldShopLogo}";
        }
    }

    public partial class Shop
    {
        public static List<Shop> FromJson(string json) => JsonConvert.DeserializeObject<List<Shop>>(json, ShopConverter.Settings);
    }

    public static class ShopSerialize
    {
        public static string ToJson(this List<Shop> self) => JsonConvert.SerializeObject(self, ShopConverter.Settings);
    }

    internal static class ShopConverter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
